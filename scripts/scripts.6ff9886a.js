"use strict";var app=angular.module("monCherApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","firebase"]).constant("FIREBASE_URL","https://radiant-fire-9860.firebaseio.com/").config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/posts.html",controller:"PostsCtrl"}).when("/posts/:postId",{templateUrl:"views/showpost.html",controller:"PostViewCtrl"}).when("/register",{templateUrl:"views/register.html",controller:"AuthCtrl",resolve:{signedIn:["Auth",function(a){return a.signedIn()}]}}).when("/login",{templateUrl:"views/login.html",controller:"AuthCtrl",resolve:{signedIn:["Auth",function(a){return a.signedIn()}]}}).when("/users/:userId",{templateUrl:"views/profile.html",controller:"ProfileCtrl"}).otherwise({redirectTo:"/"})}]);app.controller("PostsCtrl",["$scope","$location","Post","Auth",function(a,b,c,d){a.posts=c.all,a.user=d.user,a.query={},a.queryBy="$",a.post={url:"http://"},a.deletePost=function(a){c["delete"](a)}}]),app.controller("PostViewCtrl",["$scope","$routeParams","Post","Auth",function(a,b,c,d){a.post=c.get(b.postId),a.comments=c.comments(b.postId),a.user=d.user,a.signedIn=d.signedIn,a.addComment=function(){if(a.commentText&&""!==a.commentText){var b={text:a.commentText,creator:a.user.profile.username,creatorUID:a.user.uid};a.comments.$add(b),a.commentText=""}},a.deleteComment=function(b){a.comments.$remove(b)}}]),app.controller("NavCtrl",["$scope","$location","Post","Auth",function(a,b,c,d){a.signedIn=d.signedIn,a.logout=d.logout,a.user=d.user,a.post={url:"http://",title:""},a.submitPost=function(){a.post.creator=a.user.profile.username,a.post.creatorUID=a.user.uid,c.create(a.post).then(function(c){b.path("/posts/"+c.key()),a.post={url:"http://",title:""}})}}]),app.controller("AuthCtrl",["$scope","$location","Auth","signedIn",function(a,b,c,d){c.signedIn()&&b.path("/"),a.login=function(){c.login(a.user).then(function(){b.path("/")},function(b){a.error=b.toString()})},a.register=function(){c.register(a.user).then(function(d){return c.login(a.user).then(function(b){return d.username=a.user.username,c.createProfile(d,b)}).then(function(){b.path("/")})},function(b){a.error=b.toString()})}}]),app.controller("ProfileCtrl",["$scope","$routeParams","Profile",function(a,b,c){var d=b.userId;a.profile=c.get(d),c.getPosts(d).then(function(b){a.posts=b})}]),app.factory("Post",["$firebaseArray","$firebaseObject","FIREBASE_URL",function(a,b,c){var d=new Firebase(c),e=a(d.child("posts")),f={all:e,create:function(a){return e.$add(a).then(function(b){return d.child("user_posts").child(a.creatorUID).push(b.key()),b})},get:function(a){return b(d.child("posts").child(a))},"delete":function(a){return e.$remove(a)},comments:function(b){return a(d.child("comments").child(b))}};return f}]),app.factory("Auth",["$firebaseAuth","$firebaseObject","FIREBASE_URL","$q","$rootScope",function(a,b,c,d,e){var f=new Firebase(c),g=a(f),h={register:function(a){return g.$createUser({email:a.email,password:a.password})},createProfile:function(a,b){var c={provider:b.provider,username:a.username,email:b.password.email,profileImageURL:b.password.profileImageURL};return f.child("profiles").child(a.uid).set(c)},login:function(a){return g.$authWithPassword({email:a.email,password:a.password})},logout:function(){g.$unauth(),e.$broadcast("$firebaseAuth:unauth")},signedIn:function(){return g.$getAuth()},user:{}};return e.$on("$firebaseAuth:unauth",function(){h.user&&h.user.profile&&h.user.profile.$destroy(),angular.copy({},h.user),console.log("logged out")}),f.onAuth(function(a){a?(angular.copy(a,h.user),h.user.profile=b(f.child("profiles").child(a.uid)),console.log("Authenticated with uid:",a.uid)):console.log("Client unauthenticated.")}),h}]),app.factory("Profile",["FIREBASE_URL","$firebaseObject","$firebaseArray","Post","$q",function(a,b,c,d,e){var f=new Firebase(a),g={get:function(a){return b(f.child("profiles").child(a))},getPosts:function(a){var b=e.defer();return c(f.child("user_posts").child(a)).$loaded().then(function(a){for(var c={},e=0;e<a.length;e++){var f=a[e].$value;c[f]=d.get(f)}b.resolve(c)}),b.promise}};return g}]),app.filter("hostnameFromUrl",function(){return function(a){var b=document.createElement("a");return b.href=a,b.hostname}}),angular.module("monCherApp").run(["$templateCache",function(a){a.put("views/login.html",'<div class="auth-forms"> <h2>Log In</h2> <form ng-submit="login()"> <p ng-show="error" class="text-danger">{{ error }}</p> <input type="email" ng-model="user.email" placeholder="Email" class="form-control"><br> <input type="password" ng-model="user.password" placeholder="Password" class="form-control"><br> <input type="submit" value="Log in" class="btn btn-primary"> </form> </div>'),a.put("views/nav.html",'<nav class="navbar navbar-default"> <div class="container-fluid"> <!-- Brand and toggle get grouped for better mobile display --> <div class="navbar-header"> <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" href="#/"> <img alt="Brand" src="images/moncher.eb86c205.jpg" class="img-responsive logoMoncher"> </a> </div> <!-- Collect the nav links, forms, and other content for toggling --> <div ng-controller="NavCtrl" class="collapse navbar-collapse" id="bs-example-navbar-collapse-1"> <ul class="nav navbar-nav"> <li id="nameapp"><a href="#/" class="font-moncher">Mon Cher <sup>beta</sup><span class="sr-only">(current)</span></a></li> </ul> <div class="row cmt"></div> <form class="navbar-form navbar-left" role="search" ng-submit="submitPost()" ng-show="signedIn()"> <div class="form-group input-group-sm"> <input type="text" class="form-control" placeholder="Title" ng-model="post.title"> </div> <div class="form-group input-group-sm"> <input type="text" class="form-control" placeholder="Link" ng-model="post.url"> </div> <div class="btn-group btn-group-sm" role="group" aria-label="..."> <button type="submit" class="btn btn-default">Submit</button> </div> </form> <ul class="nav navbar-nav navbar-right"> <li ng-show="signedIn()"> <a ng-href="#/users/{{ user.uid }}"> <img ng-src="{{ user.profile.profileImageURL }}" class="nav-pic"> {{ user.profile.username }} </a> </li> <li ng-show="signedIn()"><a ng-href="#" ng-click="logout()">Log Out</a></li> <li ng-hide="signedIn()"><a href="#/login"><strong>Log In</strong></a></li> <li ng-hide="signedIn()"><a href="#/register">Sign Up for <strong>Mon Cher</strong></a></li> </ul> </div><!-- /.navbar-collapse --> </div><!-- /.container-fluid --> </nav>'),a.put("views/posts.html",'<div style="margin-bottom: 20px"> <form role="search"> <div class="input-group" style="width:100%"> <!-- class input-group-sm --> <input id="search" ng-model="query[queryBy]" type="text" class="form-control" placeholder="Search" style="width:100%"> </div><!-- /input-group --> </form> </div> <div class="panel panel-default"> <div class="panel-body row" ng-repeat="post in posts | filter:query"> <div class="col-xs-1"> </div> <div class="col-md-11 col-xs-11"> <div class="info"> <a ng-href="{{ post.url }}"> {{ post.title }} <span class="url">({{ post.url | hostnameFromUrl }})</span> </a> </div> <div> <span>submitted by <a ng-href="#/users/{{ post.creatorUID }}">{{ post.creator }}</a></span> &mdash; <a ng-href="#/posts/{{ post.$id }}">comments</a> <a ng-click="deletePost(post)" ng-show="user.uid === post.creatorUID">delete</a> </div> </div> </div> </div>'),a.put("views/profile.html",'<div class="profile"> <div class="row"> <div class="col-xs-4 col-sm-1"> <img ng-src="{{ profile.profileImageURL }}" class="prof-img"> </div> <div class="row"> <div class="col-sm-10"> <span class="name"> {{ profile.username }} </span> </div> <div class="col-sm-10"> <span class="text-left"> {{ profile.email }} </span> </div> </div> </div><br> <div class="panel panel-default"> <div class="panel-body row" ng-repeat="(key,post) in posts"> <div class="col-xs-1"> </div> <div class="col-md-11 col-xs-11"> <div class="info"> <a ng-href="{{ post.url }}"> {{ post.title }} <span class="url">({{ post.url | hostnameFromUrl }})</span> </a> </div> <div> <a ng-href="#/posts/{{ post.$id }}">comments</a> </div> </div> </div> </div> </div><br> <a ng-href="#/posts">Back to Posts</a>'),a.put("views/register.html",'<div class="auth-forms"> <h2>Sign Up</h2> <form ng-submit="register()"> <p ng-show="error" class="text-danger">{{ error }}</p> <input type="text" ng-model="user.username" placeholder="Username" class="form-control"><br> <input type="email" ng-model="user.email" placeholder="Email" class="form-control"><br> <input type="password" ng-model="user.password" placeholder="Password" class="form-control"><br> <input type="submit" value="Sign up" class="btn btn-primary"> </form> </div>'),a.put("views/showpost.html",'<div class="panel panel-default"> <div class="panel-body row"> <div class="col-xs-1"> </div> <div class="col-md-11 col-xs-11"> <div class="info"> <a ng-href="{{ post.url }}"> {{ post.title }} <span class="url">({{ post.url | hostnameFromUrl }})</span> </a> </div> <div> <span> submitted by <a ng-href="#/users/{{ post.creatorUID }}"> {{ post.creator }} </a> </span> </div> </div> </div> </div> <div ng-repeat="comment in comments" class="row cmt"> <div class="col-md-12"> <p>{{ comment.text }}</p> <p class="author">posted by <a ng-href="#/users/{{ comment.creatorUID }}"> {{ comment.creator }} </a> <a ng-href="" ng-click="deleteComment(comment)" ng-show="signedIn() && comment.creatorUID === user.uid"> (delete) </a> </p> </div> </div> <div class="cmt-form"> <div ng-hide="signedIn()"> <p><a href="#/login">Sign in</a> to post a comment</p> </div> <form ng-show="signedIn()" ng-submit="addComment()"> <textarea ng-model="commentText" placeholder="Post a Comment" class="form-control"></textarea><br> <input type="submit" value="Post Comment" class="btn btn-primary"> </form> </div><br> <a ng-href="#/posts">Back to Posts</a>')}]);